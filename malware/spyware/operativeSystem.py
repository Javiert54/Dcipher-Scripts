import win32com.client
import pandas as pd
import numpy as np
import re
from packaging import version


def probeIfContains(app, entry):
    
    patron_version = r"(\d+\.\d+\.\d+(\.\d+)*)"  #Buscamos la versión del programa dentro de la descripción
    coincidencia = re.search(patron_version, entry.description)
    if coincidencia:
        versionExploit = coincidencia.group(1)
    else:
        return app.exploits
    
    
    if app.name in entry.description and version.parse(app.version) <= version.parse(versionExploit):
        if pd.isnull(entry.codes): return app.exploits
        try:
            url = (entry.source_url.split(";"),)
        except:
            url = entry.source_url
        try:
            code = entry.codes.split(";")
            for c in code:
                app.exploits[c] = ("" if pd.isnull(url) else url)
        except:
            app.exploits[entry.codes] = ("" if pd.isnull(url) else url)
        return app.exploits
    return app.exploits


class application:
    def __init__(self, fullName:str, name:str, version: str, exploits: dict):
        self.fullName = fullName
        self.name = name
        self.version = version
        self.exploits = exploits
        

# Iterar y mostrar los resultados
def getAppsCVE(file:str = 'files_exploits.csv'):
    #Obtener la base de datos de exploits
    exploitDB = pd.read_csv(file)

    
    # Obtener el objeto WMI
    wmi = win32com.client.GetObject("winmgmts:")
    # Crear una instancia para consultar las aplicaciones instaladas
    products = wmi.ExecQuery("SELECT * FROM Win32_Product")
    
    apps = set()
    for product in products:


        app = application(product.Name, " ".join(product.Name.split()[:2]), product.Version, {})

        try:
            
            for index, row in exploitDB.iterrows():
                app.exploits = probeIfContains(app, row)

        except:
            print(f"No se pudo obtener la fila de {app.name}")
        apps.add(app)
    return apps
        
for app in getAppsCVE():
    print(f"{app.fullName}: {app.exploits}")